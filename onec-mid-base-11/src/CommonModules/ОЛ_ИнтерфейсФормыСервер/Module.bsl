#Область ПрограммныйИнтерфейс 
	
// Добавить на форму дополнителные элементы.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма
Процедура ДобавитьНаФормуДополнителныеЭлементы(Форма) Экспорт
    
    ИмяФормы = Форма.ИмяФормы;
    
    Если ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаДокумента" Тогда       
        ДополнитьФорму(Форма);
    ИначеЕсли ИмяФормы = "Документ.ОплатаОтПокупателя.Форма.ФормаДокумента" Тогда
        ДобавитьКонтактноеЛицо(Форма);
        ПереместитьКонтактноеЛицо(Форма);
    ИначеЕсли ИмяФормы = "Документ.ОплатаПоставщику.Форма.ФормаДокумента" Тогда
        ДобавитьКонтактноеЛицо(Форма);
        ПереместитьКонтактноеЛицо(Форма);
    ИначеЕсли ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокумента" Тогда 
        ДобавитьКонтактноеЛицо(Форма);    
    ИначеЕсли ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента" Тогда    
        ДобавитьКонтактноеЛицо(Форма);    
    КонецЕсли;
   
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Дополнить форму.
// 
// Параметры:
//  Форма - Форма, ФормаКлиентскогоПриложения - Форма
Процедура ДополнитьФорму(Форма)

    ДобавитьКонтактноеЛицо(Форма);      
    
    ДополнитьГруппуШапкаЛево(Форма);
    ДобавитьДопРеквизитыФормы(Форма);
    
КонецПроцедуры

// Добавить контактное лицо.
// 
// Параметры:
//  Форма - Форма, ФормаКлиентскогоПриложения - Форма
Процедура ДобавитьКонтактноеЛицо(Форма)
    
    ДоговорЭлемент = Форма.Элементы.Найти("Договор");
       
    ПолеВвода = Форма.Элементы.Вставить("ОЛ_КонтактноеЛицо", Тип("ПолеФормы"), ДоговорЭлемент.Родитель); 
    ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
    ПолеВвода.ПутьКДанным = "Объект.ОЛ_КонтактноеЛицо";
       
КонецПроцедуры

// Переместить контактное лицо.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма
Процедура ПереместитьКонтактноеЛицо(Форма)
    
    КонтактноеЛицоЭлемент = Форма.Элементы.Найти("ОЛ_КонтактноеЛицо");
    Родитель = КонтактноеЛицоЭлемент.Родитель;  
    
    ДоговорЭлемент = Неопределено;   
    
    ИскомыйЭлемент = Неопределено;
    Для Каждого ПодчиненныйЭлемент Из Родитель.ПодчиненныеЭлементы Цикл
        
        Если ДоговорЭлемент <> Неопределено Тогда
            ИскомыйЭлемент = ПодчиненныйЭлемент; 
            Прервать;
        КонецЕсли;    
            
        Если ПодчиненныйЭлемент.Имя = "Договор" Тогда          
            ДоговорЭлемент = ПодчиненныйЭлемент;    
        КонецЕсли;
    
    КонецЦикла;
    Форма.Элементы.Переместить(КонтактноеЛицоЭлемент, КонтактноеЛицоЭлемент.Родитель, ИскомыйЭлемент); 	
    
КонецПроцедуры

// Дополнить группу шапка лево.
// 
// Параметры:
//  Форма - Форма, ФормаКлиентскогоПриложения - Форма
Процедура ДополнитьГруппуШапкаЛево(Форма)
    
    //Добавим группу Согл скидка
    Группа = Форма.Элементы.Вставить("ОЛ_ГруппаСоглСкидка", Тип("ГруппаФормы"), Форма.Элементы.ГруппаШапкаЛево);
    Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
    //@skip-check wrong-type-expression
    Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
    Группа.ОтображатьЗаголовок = Ложь;
    Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
    
    //Добавим реквизит СогласованнаяСкидка 
    ПолеВвода = Форма.Элементы.Добавить("ОЛ_СогласованнаяСкидка", Тип("ПолеФормы"), Форма.Элементы.ОЛ_ГруппаСоглСкидка); 
    ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
    ПолеВвода.ПутьКДанным = "Объект.ОЛ_СогласованнаяСкидка";	
    //@skip-check module-attachable-event-handler-name
    ПолеВвода.УстановитьДействие("ПриИзменении", "ОЛ_СогласованнаяСкидкаПриИзменении");
    
    //Добавим команду
    НоваяКоманда_ПересчитатьСоСкидкой = Форма.Команды.Добавить("ОЛ_ПересчитатьСУчетомСкидки");
    НоваяКоманда_ПересчитатьСоСкидкой.Заголовок = "Пересчитать";
    НоваяКоманда_ПересчитатьСоСкидкой.Действие = "ОЛ_ПересчитатьСУчетомСкидки";
    
    Кнопка = Форма.Элементы.Добавить("ОЛ_ПересчитатьСУчетомСкидки", Тип("КнопкаФормы"), Форма.Элементы.ОЛ_ГруппаСоглСкидка);
    Кнопка.ИмяКоманды = "ОЛ_ПересчитатьСУчетомСкидки";
    
КонецПроцедуры 

// Добавить доп реквизиты формы.
// 
// Параметры:
//  Форма - Форма, ФормаКлиентскогоПриложения - Форма
Процедура ДобавитьДопРеквизитыФормы(Форма)

    МассивНовыхРеквизитов = Новый Массив;
    
    НовыйРеквизит = Новый РеквизитФормы("ИменаТЧ", Новый ОписаниеТипов("СписокЗначений"));	
    МассивНовыхРеквизитов.Добавить(НовыйРеквизит);
    
    Форма.ИзменитьРеквизиты(МассивНовыхРеквизитов);
    
КонецПроцедуры

#КонецОбласти


